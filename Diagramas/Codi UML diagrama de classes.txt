@startuml

   skinparam classAttributeIconSize 0

   class "TaamApp"
   {
        - {static} instance : TaamApp
        - db : DataBase
        + {static} searcher : Searcher
        + {static} product : Product
        + {static} ingredient : Ingredient
        + {static} result : Result
        + {static} visitor : Visitor
        + {static} getInstance() : TaamApp
        + checkBarcode(barcode : String) : Product
        + checkName(name: String) : Map<String, Object>
        + notFound() : void   
        + incident(observation : String) : void  
        + checkProductBarcode(barcode: String) : Map<String, Object>
        + checkProductIngredientName(name : String) : Map<String, Object>
        + recommendedProducts() : Map<String, Object>
        + refreshRecommendedProducts() : Map<String, Object>
        + getFrequentQuestions() : Map<String, Object>
        + getAnswer(questionId : String) : Map<String, Object>
        + saveQuestion(question : String) : void
        + changeRestrictionsLanguage(restrictions: String) : Map<String, Object>
   }

   class "Searcher"
   {
        - productName : String
        - barcode : String
        - ingredientName : String
        - db : DataBase
        + Searcher(elementName: String, barcode : String)
        + searchProductByName(nameSearched : String) : Product
        + searchProductByBarcode(barcode : String) : Product
        + searchIngredient(nameSearched : String) : boolean
   }

   class "DataBase"
   {
        + selectProductName(barcode : String) : ResultSet
        + selectProductIngredientsId(barcode : String) : ResultSet
        + selectProductIngredientName(ingredient_id : Integer) : ResultSet
        + selectProductIdName() : ResultSet
        + selectProductId() : ResultSet
        + selectIngredientIdName() : ResultSet
        + selectQuestions() : ResultSet
        + selectAnswer(questionId : Integer) : ResultSet
        + insertQuestion(question : String) : void
        + insertNotFoundBarcode(barcode : String) : void
        + insertNotFoundName(name : String) : void
        + insertIncidentProduct(observation : String, barcode : String) : void
        + insertIncidentIngredient(observation : String, barcode : Integer) : void
   }

   class "Configuration"
   {
        - {static} instance : Configuration
        - language : String
        - userRestrictionsList : List<String>
        - restrictionsSpanishList : List<String>
        - restrictionsCatalanList : List<String>
        - restrictionsEnglishList : List<String>
        + {static} getInstance() : Configuration
        + textTransformer(text : String) : String 
        + createConfiguration(configuration : String) : Visitor
        + getRestrictionsList() : Map<String, Object>
        + changeRestrictionsLanguage(restrictions : String) : Map<String, Object>
   }

   class "Product"
   {
        - productName : String
        - barcode : String
        - image : String
   }
   
   class "Ingredient"
   {
        - ingredientName : String
        - id : Integer
        + Ingredient(ingredientName: String, id : String)
   }

   enum "Edible" 
   {
        SUITABLE
        DOUBTFUL
        UNSUITABLE
   }

   class "Result"
   {
        - result : Edible
   }

   interface "Visitor"
   {
     + {abstract} checkProduct(ingredientList: Ingredient) : Result
     + {abstract} checkIngredient(ingredient: Ingredient) : Result
   }

   class "Vegan"
   {
     + checkProduct(ingredientList: Ingredient) : Result
     + checkIngredient(ingredient: Ingredient) : Result
   }

   class "Vegetarian"
   {
     + checkProduct(ingredientList: Ingredient) : Result
     + checkIngredient(ingredient: Ingredient) : Result
   }

   class "Gluten Allergic"
   {
     + checkProduct(ingredientList: Ingredient) : Result
     + checkIngredient(ingredient: Ingredient) : Result
   }

   class "Lactose Allergic"
   {
     + checkProduct(ingredientList: Ingredient) : Result
     + checkIngredient(ingredient: Ingredient) : Result
   }

   class "Tree Nut Allergic"
   {
     + checkProduct(ingredientList: Ingredient) : Result
     + checkIngredient(ingredient: Ingredient) : Result
   }

   class "Teetotal"
   {
     + checkProduct(ingredientList: Ingredient) : Result
     + checkIngredient(ingredient: Ingredient) : Result
   }

  
   "TaamApp" --> "Configuration"
   "TaamApp" --> "Searcher"
   "TaamApp" --> "Visitor"
   "TaamApp" --> "DataBase"
   "TaamApp" o--> "1..*" "Product" : recommendedProductsList
   "Searcher" --> "DataBase"
   "Vegan" --|> "Visitor" 
   "Vegetarian" --|> "Visitor"
   "Gluten Allergic" --|> "Visitor"
   "Lactose Allergic" --|> "Visitor"
   "Tree Nut Allergic" --|> "Visitor"
   "Teetotal" --|> "Visitor"
   "Product" o--> "1..*" "Ingredient" : productIngredientsList
   "Result" o--> "0..*" "Ingredient" : nonSuitableIngredientsList
   "Result" o--> "0..*" "Ingredient" : doubtfulIngredientsList

@endumlTeetotal
